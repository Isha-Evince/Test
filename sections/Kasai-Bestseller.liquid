
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css"/>

<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css"/>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>

{% stylesheet %}
.collection-section .kasai-bestseller-collection-title {
  color: black;
}
.collection-section .products .product a p {
  color : black;
}
.collection-section .products .product .product__button {
  background-color: black;
  color: white; /* Set text color to contrast with the black background */
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  text-decoration: none; /* Remove underline from the button */
}
.product__button:hover {
  opacity: 0.8; /* Reduce opacity on hover for visual feedback */
}
{% endstylesheet %}
<style>
  .collection-section {
    text-align: center;
    background-color : #ededed;
  }

  .products {
    display: flex;
    justify-content: center;
    flex-wrap: nowrap; /* Prevent products from wrapping to the next line */
    overflow-x: auto; /* Enable horizontal scrolling if products exceed container width */
    margin-bottom: 20px; /* Add some bottom margin to the products container */
    -ms-overflow-style: none; /* Hide scrollbar in IE */
    scrollbar-width: none; /* Hide scrollbar in Firefox */
  }
  .products::-webkit-scrollbar {
    display: none; /* Hide scrollbar in Chrome/Safari */
  }

  .product {
    flex: 0 0 auto; /* Allow products to shrink or grow based on container width */
    max-width: calc(25% - 20px); /* Calculate max width to fit four products with margin */
    margin-right: 20px; /* Add some right margin between products */
    box-sizing: border-box; /* Include padding and border in the width calculation */
  }

  .product:last-child {
    margin-right: 0; /* Remove margin from the last product to prevent overflow */
  }

  .product img {
    width: 50%; /* Make sure product images fill their container */
    max-width: 50%; /* Ensure images don't exceed their container's width */
  }

  .product p {
    margin: 5px 0; /* Add some margin around product details */
  }

  #showMoreButton {
    padding: 10px 20px;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }
  .product a {
  text-decoration: none; /* Remove underline from links */
  color: inherit; /* Inherit the color from the parent element */
}
  .collection-section .products{
    margin-left: 40px; /* Adjust the value as needed */
    margin-right: 40px; /* Adjust the value as needed */
  }
.slick-prev:before, .slick-next:before {
    font-family: 'slick';
    font-size: 20px;
    line-height: 1;
    opacity: .75;
    color: #214;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
  
</style>
<div class="collection-section">
  <h1 class= "kasai-bestseller-collection-title">{{ section.settings.collection_title }}</h1>
  <div class="products">
    {% for product in collections[section.settings.collection_handle].products %}
      <div class="product">
        <a href="{{ product.url }}">
          <img src="{{ product.featured_image.src | img_url: 'medium' }}" alt="{{ product.featured_image.alt }}">
          <p>{{ product.title }}</p>
          <p>{{ product.price | money }}</p>
        </a>
         <input name="id" value="{{ product.variants.first.id }}" type="hidden" id = "variantId"/>
          <button type = "button" name= "custom-add-to-cart-bestseller" id= "collection-cart-{{ product.id }}">Add to cart</button>
      </div>
    {% endfor %}
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    var addToCartButtons = document.querySelectorAll('[name="custom-add-to-cart-bestseller"]');
    
    addToCartButtons.forEach(button => {
      button.addEventListener('click', function() {
        var getVariantId = this.parentNode.querySelector('#variantId').value;

        let formobj = {
          quantity: 1,
          id: getVariantId
        };

        $.ajax({
          type: 'POST',
          url: '/cart/add.js',
          contentType: 'application/json',
          data: JSON.stringify(formobj),
          dataType: 'json',
          success: function(data) {
            console.log('Success:', data);
            window.location.href = '/cart';
          },
          error: function(xhr, textStatus, errorThrown) {
            console.error('Error:', errorThrown);
          }
        });

      });
    });
  });

  // Slick slider initialization
  jQuery(document).ready(function($) {
    $('.products').slick({
      dots: true,
      infinite: false,
      speed: 300,
      slidesToShow: 4,
      slidesToScroll: 1,
      arrows: true,
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            slidesToShow: 4,
            slidesToScroll: 1,
            infinite: true,
            dots: true
          }
        },
        {
          breakpoint: 600,
          settings: {
            slidesToShow: 4,
            slidesToScroll: 4
          }
        },
        {
          breakpoint: 480,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1
          }
        }
      ]
    });
  });
</script>


{% schema %}
{
  "name": "Kasai Bestseller",
  "settings": [
    {
      "type": "text",
      "id": "collection_title",
      "label": "Collection Title"
    },
    {
      "type": "collection",
      "id": "collection_handle",
      "label": "Collection",
      "info": "Select the collection to display"
    }
  ],
  "presets": [
    {
      "name": "Kasai Bestseller"
    }
  ]
}
{% endschema %}
